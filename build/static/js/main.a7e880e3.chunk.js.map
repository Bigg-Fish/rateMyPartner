{"version":3,"sources":["components/Header.jsx","pages/Home.jsx","pages/Secret.jsx","pages/Login.jsx","pages/Register.jsx","pages/Partner.jsx","App.js","withAuth.jsx","registerServiceWorker.js","index.js"],"names":["Header","state","react_default","a","createElement","className","href","Component","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","message","_this2","fetch","then","res","text","setState","src_components_Header","Secret","Login","props","handleInputChange","event","_event$target","target","value","name","defineProperty","onSubmit","preventDefault","method","body","JSON","stringify","headers","Content-Type","status","Error","error","history","push","catch","err","console","alert","email","password","type","placeholder","onChange","required","Partner","partners","number","Array","apply","length","Math","floor","map","e","i","key","getStars","App","Switch","Route","path","exact","component","ComponentToProtect","_Component","_class","loading","redirect","inherits","createClass","_this$state","Redirect","to","Fragment","Register","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","concat","response","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a7e880e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css'\n\nclass Header extends Component {\n    state = {}\n    render() {\n        return (\n            <div className=\"header\">\n                <ul>\n                    <li><a href=\"/\"><h1>Rate My Partner</h1></a></li>\n                    <li><a href=\"/secret\">Secret</a></li>\n                    <li><a href=\"/login\">Login</a></li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport Header from '../components/Header'\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: 'Loading...'\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/home')\n      .then(res => res.text())\n      .then(res => this.setState({ message: res }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <h1>Home</h1>\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from \"../components/Header\"\n\nexport default class Secret extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: 'Loading...'\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/secret')\n      .then(res => res.text())\n      .then(res => this.setState({ message: res }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <h1>Secret</h1>\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from \"../components/Header\"\nimport './Login.css'\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    fetch('/api/authenticate', {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status === 200) {\n          this.props.history.push('/');\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        alert('Error logging in please try again');\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"loginForm\">\n          <h1>New? <a href=\"/register\">Register Here</a>.</h1>\n          <form onSubmit={this.onSubmit}>\n            <h1>Login</h1>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              value={this.state.email}\n              onChange={this.handleInputChange}\n              required\n            />\n            <br></br>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n              value={this.state.password}\n              onChange={this.handleInputChange}\n              required\n            />\n            <br></br>\n            <input type=\"submit\" value=\"Login\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from \"../components/Header\"\nimport './Login.css'\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        fetch('/api/register', {\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    this.props.history.push('/');\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .catch(err => {\n                console.error(err);\n                alert('Error registering please try again. Email may already exist');\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <div className=\"loginForm\">\n                    <h1>Already Registered? <a href=\"/login\">Login</a>.</h1>\n                    <form onSubmit={this.onSubmit}>\n                        <h1>Register</h1>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Enter email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                            required\n                        />\n                        <br></br>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Enter password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            required\n                        />\n                        <br></br>\n                        <input type=\"submit\" value=\"Register\" />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Header from \"../components/Header\"\n\n\nclass Partner extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() {\n        fetch('/api/partners/')\n            .then(res => res.text())\n            .then(res => this.setState({ partners: res }));\n    }\n\n    getStars(number) {\n        return (\n            <div>\n                {\n                    Array.apply(null, { length: Math.floor(number) }).map((e, i) => (\n                        <span key={i}>⭐</span>\n                    ))\n                }\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                {this.getStars(7)}\n            </div>\n        );\n    }\n}\n\nexport default Partner;","import React, { Component } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport withAuth from './withAuth';\nimport Home from './pages/Home';\nimport Secret from './pages/Secret';\nimport Login from './pages/Login';\nimport Register from './pages/Register'\nimport Partner from './pages/Partner';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/secret\" component={withAuth(Secret)} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/partner\" component={Partner} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n\n    componentDidMount() {\n      fetch('/checkToken')\n        .then(res => {\n          if (res.status === 200) {\n            this.setState({ loading: false });\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({ loading: false, redirect: true });\n        });\n    }\n\n\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/login\" />;\n      }\n      return (\n        <React.Fragment>\n          <ComponentToProtect {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}